n - o que eu quero converter
window.alert() - Cria uma janelinha ao entrar no site
window.confirm() - Cria uma janelinha de confirmação
window.prompt() - Cria uma janelinha na qual você pode interagir escrevendo

// - Comentários em apenas uma linha ( JS )
/**/ - Comentários em uma ou mais linhas ( JS , CSS)
<!-- --> - comentários em uma ou mais linhas ( HTML )

${} - Template de str

= - Recebe
== - Igual
=== - Testa se os valores são idênticos
''-
""-
``- 
+ - concatenação

null - Nulo
var - Variável 

Identificadores:
	regras:
		Podem começar com: letras, $ ou _.
		Não podem começar com números.
		É possível usar letras ou números.
		é possível usar acentos e símbolos.
		Não podem conter espaços no lugar do espaço é utilizado o underline(_).
		Não podem ser palavras reservadas ( palavras que o Javascript usa como comandos).

	Dicas: 
		Maiúsculas e minúsculas são diferentes
		Tente escolher nomes coerentes para as variáveis 
		
Data Types:
	Number
		Infinity
		NaN
	String
	Boolean
	Null
	Unefined
	Object
		Array
	Function ()

Number.parseInt() - Faz uma conversão de str para um número inteiro
Number.parseFloat() - Faz uma conversão de str para um número com ponto flutuante
Number() - Identifica se um número é inteiro ou real
	
String() - gera uma str 
n.toString() - converte um valor para str
	
n.length - Diz qual é o tamanho da str
n.toUpperCase() - põe as letras em maiúsculas 
n.toLowerCase() - põe as letras em minúsculas
n.toFixed() - Põe mais casas decimais aos números
.replace("") - Troca uma coisa por outra

document.write() - escreve comandos js na pagina do site

 n1.toLocaleString('pt-BR', {style: 'currency', currency: ' '}) - Transforma um valor para uma moeda
 
 Operadores:
 	Aritméticos:
 		+: Soma
 		-:  Subtração
 		*:  Multiplicação
 		/: Divisão
 		%: Resto da divisão inteira
 		**: Potencia
 			Ordem de Precedência dos aritméticos :
 				(),{},[] --> ** --> *,/,% --> +,-
 	
 	Atribuição:
 	Relacionais:
 		> - Maior
 		< - Menor
 		>= - Maior igual
 		<= - Menor igual
 		== - igual
 		!= - diferente de
 	Lógicos: 
 		! - Negação ( não ):
 			Resultados: True ou False
 		&& - Conjunção ( e ):
 			Resultados: True True = True // True False = False // False True = False // False False = False
 		|| - Disjunção ( ou ):
 			Resultados: True True = True // True False = True // False True = True // False False = False
 	Ternário:
 		? - 
 		: - 
 			
 		
 		
 					Ordem de precedência dos operadores:
 						Aritméticos => Atribuição => Lógicos 
 	